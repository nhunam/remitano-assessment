{"ast":null,"code":"import _defineProperty from\"/Users/nhunam/Desktop/Java/remitano/remitano/video-sharing-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Users/nhunam/Desktop/Java/remitano/remitano/video-sharing-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";var _handleActions;import{ActionTypes}from\"actions/video/type\";import{AppStatus}from\"configurations\";import{handleActions}from\"redux-actions\";import immutable from\"immutability-helper\";export var videoState={data:[],page:{total_pages:1,has_next:false,has_previous:false,current_page:0,total_elements:0}};export default{videos:handleActions((_handleActions={},_defineProperty(_handleActions,ActionTypes.VIDEO_FETCH,function(state,_ref){var payload=_ref.payload;return immutable(state,{data:{$set:payload.page_index===0?[]:state.data},page:{$set:payload.page_index===0?{total_pages:1,has_next:false,has_previous:false,current_page:0,total_elements:0}:state.page}});}),_defineProperty(_handleActions,ActionTypes.VIDEO_FETCH_SUCCESS,function(state,_ref2){var payload=_ref2.payload;return immutable(state,{data:{$set:[].concat(_toConsumableArray(state.data),_toConsumableArray(payload.data))},page:{$set:payload.page}});}),_defineProperty(_handleActions,ActionTypes.VIDEO_FETCH_FAILURE,function(state,_ref3){var payload=_ref3.payload;return immutable(state,{status:{$set:AppStatus.READY}});}),_handleActions),videoState)};","map":{"version":3,"sources":["/Users/nhunam/Desktop/Java/remitano/remitano/video-sharing-react/src/reducers/video.js"],"names":["ActionTypes","AppStatus","handleActions","immutable","videoState","data","page","total_pages","has_next","has_previous","current_page","total_elements","videos","VIDEO_FETCH","state","payload","$set","page_index","VIDEO_FETCH_SUCCESS","VIDEO_FETCH_FAILURE","status","READY"],"mappings":"2YAAA,OAASA,WAAT,KAA4B,oBAA5B,CACA,OAASC,SAAT,KAA0B,gBAA1B,CACA,OAASC,aAAT,KAA8B,eAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,CACxBC,IAAI,CAAE,EADkB,CAExBC,IAAI,CAAE,CACJC,WAAW,CAAE,CADT,CAEJC,QAAQ,CAAE,KAFN,CAGJC,YAAY,CAAE,KAHV,CAIJC,YAAY,CAAE,CAJV,CAKJC,cAAc,CAAE,CALZ,CAFkB,CAAnB,CAWP,cAAe,CACbC,MAAM,CAAEV,aAAa,mDAEhBF,WAAW,CAACa,WAFI,CAEU,SAACC,KAAD,UAAUC,CAAAA,OAAV,MAAUA,OAAV,OACzBZ,CAAAA,SAAS,CAACW,KAAD,CAAQ,CACfT,IAAI,CAAE,CAAEW,IAAI,CAAED,OAAO,CAACE,UAAR,GAAuB,CAAvB,CAA2B,EAA3B,CAAgCH,KAAK,CAACT,IAA9C,CADS,CAEfC,IAAI,CAAE,CACJU,IAAI,CACFD,OAAO,CAACE,UAAR,GAAuB,CAAvB,CACI,CACEV,WAAW,CAAE,CADf,CAEEC,QAAQ,CAAE,KAFZ,CAGEC,YAAY,CAAE,KAHhB,CAIEC,YAAY,CAAE,CAJhB,CAKEC,cAAc,CAAE,CALlB,CADJ,CAQIG,KAAK,CAACR,IAVR,CAFS,CAAR,CADgB,EAFV,iCAkBhBN,WAAW,CAACkB,mBAlBI,CAkBkB,SAACJ,KAAD,WAAUC,CAAAA,OAAV,OAAUA,OAAV,OACjCZ,CAAAA,SAAS,CAACW,KAAD,CAAQ,CACfT,IAAI,CAAE,CAAEW,IAAI,8BAAMF,KAAK,CAACT,IAAZ,qBAAqBU,OAAO,CAACV,IAA7B,EAAN,CADS,CAEfC,IAAI,CAAE,CAAEU,IAAI,CAAED,OAAO,CAACT,IAAhB,CAFS,CAAR,CADwB,EAlBlB,iCAuBhBN,WAAW,CAACmB,mBAvBI,CAuBkB,SAACL,KAAD,WAAUC,CAAAA,OAAV,OAAUA,OAAV,OACjCZ,CAAAA,SAAS,CAACW,KAAD,CAAQ,CACfM,MAAM,CAAE,CAAEJ,IAAI,CAAEf,SAAS,CAACoB,KAAlB,CADO,CAAR,CADwB,EAvBlB,kBA4BnBjB,UA5BmB,CADR,CAAf","sourcesContent":["import { ActionTypes } from \"actions/video/type\";\nimport { AppStatus } from \"configurations\";\nimport { handleActions } from \"redux-actions\";\nimport immutable from \"immutability-helper\";\n\nexport const videoState = {\n  data: [],\n  page: {\n    total_pages: 1,\n    has_next: false,\n    has_previous: false,\n    current_page: 0,\n    total_elements: 0\n  }\n};\n\nexport default {\n  videos: handleActions(\n    {\n      [ActionTypes.VIDEO_FETCH]: (state, { payload }) =>\n        immutable(state, {\n          data: { $set: payload.page_index === 0 ? [] : state.data },\n          page: {\n            $set:\n              payload.page_index === 0\n                ? {\n                    total_pages: 1,\n                    has_next: false,\n                    has_previous: false,\n                    current_page: 0,\n                    total_elements: 0\n                  }\n                : state.page\n          }\n        }),\n      [ActionTypes.VIDEO_FETCH_SUCCESS]: (state, { payload }) =>\n        immutable(state, {\n          data: { $set: [...state.data, ...payload.data] },\n          page: { $set: payload.page }\n        }),\n      [ActionTypes.VIDEO_FETCH_FAILURE]: (state, { payload }) =>\n        immutable(state, {\n          status: { $set: AppStatus.READY }\n        })\n    },\n    videoState\n  )\n};\n"]},"metadata":{},"sourceType":"module"}