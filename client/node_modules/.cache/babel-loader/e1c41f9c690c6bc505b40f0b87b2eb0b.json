{"ast":null,"code":"import { ActionTypes } from \"actions/video/type\";\nimport { AppStatus } from \"configurations\";\nimport { handleActions } from \"redux-actions\";\nimport immutable from \"immutability-helper\";\nexport const videoState = {\n  data: [],\n  page: {\n    total_pages: 1,\n    has_next: false,\n    has_previous: false,\n    current_page: 0,\n    total_elements: 0\n  }\n};\nexport default {\n  videos: handleActions({\n    [ActionTypes.VIDEO_FETCH]: (state, {\n      payload\n    }) => immutable(state, {\n      data: {\n        $set: payload.page_index === 0 ? [] : state.data\n      },\n      page: {\n        $set: payload.page_index === 0 ? {\n          total_pages: 1,\n          has_next: false,\n          has_previous: false,\n          current_page: 0,\n          total_elements: 0\n        } : state.page\n      }\n    }),\n    [ActionTypes.VIDEO_FETCH_SUCCESS]: (state, {\n      payload\n    }) => immutable(state, {\n      data: {\n        $set: [...state.data, ...payload.data]\n      },\n      page: {\n        $set: payload.page\n      }\n    }),\n    [ActionTypes.VIDEO_FETCH_FAILURE]: (state, {\n      payload\n    }) => immutable(state, {\n      status: {\n        $set: AppStatus.READY\n      }\n    })\n  }, videoState)\n};","map":{"version":3,"sources":["/Users/nhunam/Desktop/Java/remitano/remitano/video-sharing-react/src/reducers/video.js"],"names":["ActionTypes","AppStatus","handleActions","immutable","videoState","data","page","total_pages","has_next","has_previous","current_page","total_elements","videos","VIDEO_FETCH","state","payload","$set","page_index","VIDEO_FETCH_SUCCESS","VIDEO_FETCH_FAILURE","status","READY"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,EADkB;AAExBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,CADT;AAEJC,IAAAA,QAAQ,EAAE,KAFN;AAGJC,IAAAA,YAAY,EAAE,KAHV;AAIJC,IAAAA,YAAY,EAAE,CAJV;AAKJC,IAAAA,cAAc,EAAE;AALZ;AAFkB,CAAnB;AAWP,eAAe;AACbC,EAAAA,MAAM,EAAEV,aAAa,CACnB;AACE,KAACF,WAAW,CAACa,WAAb,GAA2B,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KACzBZ,SAAS,CAACW,KAAD,EAAQ;AACfT,MAAAA,IAAI,EAAE;AAAEW,QAAAA,IAAI,EAAED,OAAO,CAACE,UAAR,KAAuB,CAAvB,GAA2B,EAA3B,GAAgCH,KAAK,CAACT;AAA9C,OADS;AAEfC,MAAAA,IAAI,EAAE;AACJU,QAAAA,IAAI,EACFD,OAAO,CAACE,UAAR,KAAuB,CAAvB,GACI;AACEV,UAAAA,WAAW,EAAE,CADf;AAEEC,UAAAA,QAAQ,EAAE,KAFZ;AAGEC,UAAAA,YAAY,EAAE,KAHhB;AAIEC,UAAAA,YAAY,EAAE,CAJhB;AAKEC,UAAAA,cAAc,EAAE;AALlB,SADJ,GAQIG,KAAK,CAACR;AAVR;AAFS,KAAR,CAFb;AAiBE,KAACN,WAAW,CAACkB,mBAAb,GAAmC,CAACJ,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KACjCZ,SAAS,CAACW,KAAD,EAAQ;AACfT,MAAAA,IAAI,EAAE;AAAEW,QAAAA,IAAI,EAAE,CAAC,GAAGF,KAAK,CAACT,IAAV,EAAgB,GAAGU,OAAO,CAACV,IAA3B;AAAR,OADS;AAEfC,MAAAA,IAAI,EAAE;AAAEU,QAAAA,IAAI,EAAED,OAAO,CAACT;AAAhB;AAFS,KAAR,CAlBb;AAsBE,KAACN,WAAW,CAACmB,mBAAb,GAAmC,CAACL,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KACjCZ,SAAS,CAACW,KAAD,EAAQ;AACfM,MAAAA,MAAM,EAAE;AAAEJ,QAAAA,IAAI,EAAEf,SAAS,CAACoB;AAAlB;AADO,KAAR;AAvBb,GADmB,EA4BnBjB,UA5BmB;AADR,CAAf","sourcesContent":["import { ActionTypes } from \"actions/video/type\";\nimport { AppStatus } from \"configurations\";\nimport { handleActions } from \"redux-actions\";\nimport immutable from \"immutability-helper\";\n\nexport const videoState = {\n  data: [],\n  page: {\n    total_pages: 1,\n    has_next: false,\n    has_previous: false,\n    current_page: 0,\n    total_elements: 0\n  }\n};\n\nexport default {\n  videos: handleActions(\n    {\n      [ActionTypes.VIDEO_FETCH]: (state, { payload }) =>\n        immutable(state, {\n          data: { $set: payload.page_index === 0 ? [] : state.data },\n          page: {\n            $set:\n              payload.page_index === 0\n                ? {\n                    total_pages: 1,\n                    has_next: false,\n                    has_previous: false,\n                    current_page: 0,\n                    total_elements: 0\n                  }\n                : state.page\n          }\n        }),\n      [ActionTypes.VIDEO_FETCH_SUCCESS]: (state, { payload }) =>\n        immutable(state, {\n          data: { $set: [...state.data, ...payload.data] },\n          page: { $set: payload.page }\n        }),\n      [ActionTypes.VIDEO_FETCH_FAILURE]: (state, { payload }) =>\n        immutable(state, {\n          status: { $set: AppStatus.READY }\n        })\n    },\n    videoState\n  )\n};\n"]},"metadata":{},"sourceType":"module"}