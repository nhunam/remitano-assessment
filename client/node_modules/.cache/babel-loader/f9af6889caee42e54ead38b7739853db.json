{"ast":null,"code":"var _jsxFileName = \"/Users/nhunam/Desktop/Java/remitano/remitano/video-sharing-react/src/components/group/Router/RoutePrivate.jsx\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst RoutePrivate = ({\n  component: Component,\n  isAuthenticated,\n  to,\n  path,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    key: path,\n    to: {\n      pathname: to\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}));\n\nRoutePrivate.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  location: PropTypes.object,\n  to: PropTypes.string\n};\nRoutePrivate.defaultProps = {\n  to: \"/\"\n};\nexport default RoutePrivate;","map":{"version":3,"sources":["/Users/nhunam/Desktop/Java/remitano/remitano/video-sharing-react/src/components/group/Router/RoutePrivate.jsx"],"names":["Redirect","Route","PropTypes","React","RoutePrivate","component","Component","isAuthenticated","to","path","rest","props","pathname","propTypes","oneOfType","func","object","isRequired","bool","location","string","defaultProps"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,SAAS,EAAEC,SADS;AAEpBC,EAAAA,eAFoB;AAGpBC,EAAAA,EAHoB;AAIpBC,EAAAA,IAJoB;AAKpB,KAAGC;AALiB,CAAD,kBAOnB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IACXJ,eAAe,gBACb,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADa,gBAGb,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEF,IADP;AAEE,IAAA,EAAE,EAAE;AACFG,MAAAA,QAAQ,EAAEJ;AADR,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAPF;;AAwBAJ,YAAY,CAACS,SAAb,GAAyB;AACvBR,EAAAA,SAAS,EAAEH,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,IAAX,EAAiBb,SAAS,CAACc,MAA3B,CAApB,EAAwDC,UAD5C;AAEvBV,EAAAA,eAAe,EAAEL,SAAS,CAACgB,IAAV,CAAeD,UAFT;AAGvBE,EAAAA,QAAQ,EAAEjB,SAAS,CAACc,MAHG;AAIvBR,EAAAA,EAAE,EAAEN,SAAS,CAACkB;AAJS,CAAzB;AAOAhB,YAAY,CAACiB,YAAb,GAA4B;AAC1Bb,EAAAA,EAAE,EAAE;AADsB,CAA5B;AAIA,eAAeJ,YAAf","sourcesContent":["import { Redirect, Route } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst RoutePrivate = ({\n  component: Component,\n  isAuthenticated,\n  to,\n  path,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          key={path}\n          to={{\n            pathname: to\n          }}\n        />\n      )\n    }\n  />\n);\n\nRoutePrivate.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  location: PropTypes.object,\n  to: PropTypes.string\n};\n\nRoutePrivate.defaultProps = {\n  to: \"/\"\n};\n\nexport default RoutePrivate;\n"]},"metadata":{},"sourceType":"module"}