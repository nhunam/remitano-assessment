{"version":3,"sources":["actions/user/type.js","utils/client.js","sagas/user.js","utils/helpers.js","sagas/video.js","sagas/index.js","reducers/app.js","reducers/user.js","reducers/video.js","reducers/index.js","actions/video/type.js","serviceWorker.js","components/basic/VideoPlayer/index.jsx","components/screens/Home/index.jsx","containers/screens/Home/index.js","components/basic/Alert/index.jsx","components/basic/Form/Login/index.jsx","components/basic/Form/Logout/index.jsx","components/group/Header/index.jsx","components/group/Router/RoutePrivate.jsx","components/group/Router/RoutePublic.jsx","components/group/Router/index.jsx","containers/group/Router/index.js","components/screens/Main/index.jsx","containers/screens/Main/index.js","components/screens/NotFound/components/NotFoundWrapper.jsx","containers/screens/NotFound/index.js","components/screens/NotFound/index.jsx","App.jsx","index.js","actions/user/index.js","actions/video/index.js","actions/app/index.js","actions/index.js","actions/app/type.js","store/index.js","store/middleware.js","configurations/AppRoutes.js","configurations/AppConfig.js","configurations/index.js"],"names":["ActionTypes","keyMirror","USER_CREATE","undefined","USER_LOGIN","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGOUT","USER_LOGOUT_SUCCESS","USER_LOGOUT_FAILURE","ServerError","message","Error","captureStackTrace","name","request","url","options","config","method","errors","push","includes","payload","length","join","headers","accept","requestConfig","timeout","withCredentials","data","JSON","stringify","axios","then","a","response","catch","err","error","statusText","status","authenticate","create","logout","root","param","call","token","user","jwt_decode","put","type","email","id","password","all","takeLatest","parseYoutubeId","match","fetch","share","paramPayload","page_index","VIDEO_FETCH_SUCCESS","VIDEO_FETCH_FAILURE","videoUrl","userToken","youtubeAPIKey","AppConfig","youtubeAPIURL","requestPayload","videoId","console","log","items","snippet","title","description","sharingPayload","Authorization","requestSharingPayload","VIDEO_SHARING_SUCCESS","VIDEO_SHARING_FAILURE","VIDEO_FETCH","VIDEO_SHARING","fork","video","appState","AppStatus","IDLE","content","app","handleActions","ActionUserTypes","state","immutable","$set","RUNNING","ActionAppTypes","CLEAR_MESSAGE","READY","ActionVideoTypes","isAuthenticated","info","videos","page","total_pages","has_next","has_previous","current_page","total_elements","Boolean","window","location","hostname","VideoPlayer","props","width","height","HomeScreen","handleLoadMore","bind","this","className","pageStart","loadMore","hasMore","loader","key","map","style","PureComponent","ConnectedHomeScreen","connect","dispatch","bindActionCreators","Alert","onClick","role","data-dismiss","aria-label","aria-hidden","defaultProps","show","LoginForm","onChange","onSubmit","classnames","placeholder","required","value","LogoutForm","onLogout","to","Header","handleToggle","handleSubmit","handleChange","handleLogout","e","preventDefault","setState","prevState","toggle","target","data-toggle","data-target","Logout","Login","RoutePrivate","Component","component","path","rest","render","pathname","RoutePublic","routePrefix","LoadingMessage","Router","notFoundComponent","homeComponent","routes","fallback","route","exact","MainScreen","handleAlertCloseClick","clearMessage","ConnectedMainScreen","NotFoundWrapper","styled","div","NotFoundScreen","App","store","persistor","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","createActions","userLogin","userLogout","userCreate","videoFetch","shareVideo","videoSharing","reducer","persistReducer","storage","whitelist","combineReducers","rootReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","createStore","applyMiddleware","middleware","sagaMiddleware","run","rootSaga","persistStore","configStore","global","createSagaMiddleware","AppRoutes","lazy"],"mappings":"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","file":"static/js/main.7c92366a.chunk.js","sourcesContent":["import keyMirror from \"keymirror\";\n\nexport const ActionTypes = keyMirror({\n  USER_CREATE: undefined,\n  USER_LOGIN: undefined,\n  USER_LOGIN_SUCCESS: undefined,\n  USER_LOGIN_FAILURE: undefined,\n  USER_LOGOUT: undefined,\n  USER_LOGOUT_SUCCESS: undefined,\n  USER_LOGOUT_FAILURE: undefined\n});\n","// @flow\n/**\n * Client\n * @module Client\n */\nimport axios, { AxiosRequestConfig } from \"axios\";\n\nexport class ServerError extends Error {\n  response: Object;\n\n  constructor(message?: string): Error {\n    super(message);\n\n    Error.captureStackTrace(this, ServerError);\n\n    this.name = \"ServerError\";\n\n    return this;\n  }\n}\n\nexport function parseError(error: string): string {\n  return error || \"Something went wrong\";\n}\n\n/**\n * Fetch data\n *\n * @param {string} url\n * @param {Object} options\n * @param {string} [options.method] - Request method ( GET, POST, PUT, ... ).\n * @param {string} [options.payload] - Request body.\n * @param {Object} [options.headers]\n *\n * @returns {Promise}\n */\nexport function request(url: string, options: Object = {}): Promise<*> {\n  \n  const config = {\n    method: \"GET\",\n    ...options\n  };\n  const errors = [];\n\n  if (!url) {\n    errors.push(\"url\");\n  }\n  if (!url.includes('youtube')){\n    url = 'https://obscure-beach-46869.herokuapp.com' + url;\n  }  \n  if (\n    !config.payload &&\n    config.method !== \"GET\" &&\n    config.method !== \"DELETE\"\n  ) {\n    errors.push(\"payload\");\n  }\n\n  if (errors.length) {\n    throw new Error(`Error! You must pass \\`${errors.join(\"`, `\")}\\``);\n  }\n\n  const headers = {\n    accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    ...config.headers\n  };\n  const requestConfig: AxiosRequestConfig = {\n    headers,\n    url,\n    method: config.method,\n    timeout: 60000,\n    withCredentials: true\n  };\n\n  if (requestConfig.method !== \"GET\") {\n    requestConfig.data = JSON.stringify(config.payload);\n  }\n  return axios\n    .request(requestConfig)\n    .then(async response => response.data)\n    .catch(async err => {\n      const { response } = err;\n      const error: Object = new ServerError(response.statusText);\n      error.status = response.status;\n      error.response = await response.data;\n      throw error;\n    });\n}\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { ActionTypes } from \"actions/user/type\";\nimport jwt_decode from \"jwt-decode\";\nimport { request } from \"utils/client\";\n\n/**\n * Login\n */\nexport function* authenticate(param) {\n  try {\n    const payload = { method: \"POST\", ...param };\n    const response = yield call(request, \"/token\", payload);\n    const { token } = response;\n    const user = jwt_decode(token);\n\n    yield put({\n      type: ActionTypes.USER_LOGIN_SUCCESS,\n      payload: { token: token, email: user.email, id: user.id }\n    });\n  } catch (err) {\n    /* istanbul ignore next */\n    yield put({\n      type: ActionTypes.USER_LOGIN_FAILURE,\n      payload: err\n    });\n  }\n}\n\n/**\n * create\n */\nexport function* create(param) {\n  const { email, password } = param.payload;\n  try {\n    const payload = { method: \"POST\", ...param };\n    yield call(request, \"/users\", payload);\n\n    yield put({\n      type: ActionTypes.USER_LOGIN,\n      payload: { email: email, password: password }\n    });\n  } catch (err) {\n    /* istanbul ignore next */\n    yield put({\n      type: ActionTypes.USER_LOGIN,\n      payload: { email: email, password: password }\n    });\n  }\n}\n\n/**\n * Logout\n */\nexport function* logout() {\n  yield put({\n    type: ActionTypes.USER_LOGOUT_SUCCESS\n  });\n}\n\n/**\n * User Sagas\n */\nexport default function* root() {\n  yield all([\n    takeLatest(ActionTypes.USER_LOGIN, authenticate),\n    takeLatest(ActionTypes.USER_LOGOUT, logout),\n    takeLatest(ActionTypes.USER_CREATE, create)\n  ]);\n}\n","// @flow\n/**\n * Helper functions\n */\n\nfunction parseYoutubeId(url: string): string {\n  var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n  var match = url.match(regExp);\n  return match && match[7].length === 11 ? match[7] : \"\";\n}\n\nexport { parseYoutubeId };\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\n\nimport { ActionTypes } from \"actions/video/type\";\nimport { AppConfig } from \"configurations\";\nimport { parseYoutubeId } from \"utils/helpers\";\nimport { request } from \"utils/client\";\n\n/**\n * Fetch Video\n */\nexport function* fetch(param) {\n  try {\n    const payload = {\n      method: \"GET\"\n    };\n    const paramPayload = param.payload;\n    const url = `/videos?page_index=${paramPayload.page_index}`;\n    const response = yield call(request, url, payload);\n\n    yield put({\n      type: ActionTypes.VIDEO_FETCH_SUCCESS,\n      payload: response\n    });\n  } catch (err) {\n    /* istanbul ignore next */\n    yield put({\n      type: ActionTypes.VIDEO_FETCH_FAILURE,\n      payload: err\n    });\n  }\n}\n\n/**\n * Fetch Video\n */\nexport function* share(param) {\n  try {\n    const { payload } = param;\n    const { videoUrl, userToken } = payload;\n    const { youtubeAPIKey, youtubeAPIURL } = AppConfig;\n    const requestPayload = {\n      method: \"GET\",\n      withCredentials: false\n    };\n    const videoId = parseYoutubeId(videoUrl);\n\n    const url = `${youtubeAPIURL}?part=snippet&id=${videoId}&key=${youtubeAPIKey}`;\n    console.log(url);\n    const response = yield call(request, url, requestPayload);\n    console.log(response)\n    const { items } = response;\n    const { snippet } = items[0];\n    const { title, description } = snippet;\n\n    const sharingPayload = {\n      title: title,\n      description: description,\n      url: videoUrl\n    };\n    const headers = { Authorization: `Bearer ${userToken}` };\n    const requestSharingPayload = {\n      method: \"POST\",\n      payload: sharingPayload,\n      headers: headers,\n      withCredentials: true      \n    };\n    yield call(request, \"/videos\", requestSharingPayload);\n\n    yield put({\n      type: ActionTypes.VIDEO_SHARING_SUCCESS\n    });\n  } catch (err) {\n    /* istanbul ignore next */\n    yield put({\n      type: ActionTypes.VIDEO_SHARING_FAILURE,\n      payload: err\n    });\n  }\n}\n\n/**\n * Video Sagas\n */\nexport default function* root() {\n  yield all([takeLatest(ActionTypes.VIDEO_FETCH, fetch)]);\n  yield all([takeLatest(ActionTypes.VIDEO_SHARING, share)]);\n}\n","import { all, fork } from \"redux-saga/effects\";\n\nimport user from \"./user\";\nimport video from \"./video\";\n\n/**\n * rootSaga\n */\nexport default function* root() {\n  yield all([fork(user), fork(video)]);\n}\n","import { ActionTypes as ActionAppTypes } from \"actions/app/type\";\nimport { ActionTypes as ActionUserTypes } from \"actions/user/type\";\nimport { ActionTypes as ActionVideoTypes } from \"actions/video/type\";\nimport { AppStatus } from \"configurations\";\nimport { handleActions } from \"redux-actions\";\nimport immutable from \"immutability-helper\";\n\nexport const appState = {\n  status: AppStatus.IDLE,\n  message: {\n    type: \"\",\n    content: \"\"\n  }\n};\n\nexport default {\n  app: handleActions(\n    {\n      [ActionUserTypes.USER_LOGIN]: state =>\n        immutable(state, {\n          status: { $set: AppStatus.RUNNING }\n        }),\n      [ActionAppTypes.CLEAR_MESSAGE]: state =>\n        immutable(state, {\n          status: { $set: AppStatus.RUNNING },\n          message: {\n            type: { $set: \"\" },\n            content: { $set: \"\" }\n          }\n        }),\n      [ActionUserTypes.USER_LOGIN_FAILURE]: state =>\n        immutable(state, {\n          status: { $set: AppStatus.READY },\n          message: {\n            type: { $set: \"danger\" },\n            content: { $set: \"Login failed!\" }\n          }\n        }),\n      [ActionUserTypes.USER_LOGIN_SUCCESS]: state =>\n        immutable(state, {\n          status: { $set: AppStatus.READY },\n          message: {\n            type: { $set: \"\" },\n            content: { $set: \"\" }\n          }\n        }),\n      [ActionVideoTypes.VIDEO_FETCH]: (state, { payload }) =>\n        immutable(state, {\n          message: {\n            type: { $set: \"\" },\n            content: { $set: \"\" }\n          }\n        }),\n      [ActionVideoTypes.VIDEO_SHARING]: state =>\n        immutable(state, {\n          status: { $set: AppStatus.RUNNING }\n        }),\n      [ActionVideoTypes.VIDEO_SHARING_SUCCESS]: (state, { payload }) =>\n        immutable(state, {\n          message: {\n            type: { $set: \"success\" },\n            content: { $set: \"Your video has been shared!\" }\n          },\n          status: { $set: AppStatus.READY }\n        }),\n      [ActionVideoTypes.VIDEO_SHARING_FAILURE]: (state, { payload }) =>\n        immutable(state, {\n          message: {\n            type: { $set: \"danger\" },\n            content: { $set: \"There are some problem has been occured!\" }\n          },\n          status: { $set: AppStatus.READY }\n        })\n    },\n    appState\n  )\n};\n","import { ActionTypes } from \"actions/user/type\";\nimport { AppStatus } from \"configurations\";\nimport { handleActions } from \"redux-actions\";\nimport immutable from \"immutability-helper\";\n\nexport const userState = {\n  isAuthenticated: false,\n  info: {\n    id: -1,\n    email: \"\",\n    token: \"\"\n  }\n};\n\nexport default {\n  user: handleActions(\n    {\n      [ActionTypes.USER_LOGIN_SUCCESS]: (state, { payload }) =>\n        immutable(state, {\n          isAuthenticated: { $set: true },\n          info: {\n            id: { $set: payload.id },\n            email: { $set: payload.email },\n            token: { $set: payload.token }\n          }\n        }),\n      [ActionTypes.USER_LOGOUT]: state =>\n        immutable(state, {\n          status: { $set: AppStatus.RUNNING }\n        }),\n      [ActionTypes.USER_LOGOUT_SUCCESS]: state =>\n        immutable(state, {\n          isAuthenticated: { $set: false },\n          info: { id: { $set: -1 }, email: { $set: \"\" }, token: { $set: \"\" } },\n          status: { $set: AppStatus.IDLE }\n        })\n    },\n    userState\n  )\n};\n","import { ActionTypes } from \"actions/video/type\";\nimport { AppStatus } from \"configurations\";\nimport { handleActions } from \"redux-actions\";\nimport immutable from \"immutability-helper\";\n\nexport const videoState = {\n  data: [],\n  page: {\n    total_pages: 1,\n    has_next: false,\n    has_previous: false,\n    current_page: 0,\n    total_elements: 0\n  }\n};\n\nexport default {\n  videos: handleActions(\n    {\n      [ActionTypes.VIDEO_FETCH]: (state, { payload }) =>\n        immutable(state, {\n          data: { $set: payload.page_index === 0 ? [] : state.data },\n          page: {\n            $set:\n              payload.page_index === 0\n                ? {\n                    total_pages: 1,\n                    has_next: false,\n                    has_previous: false,\n                    current_page: 0,\n                    total_elements: 0\n                  }\n                : state.page\n          }\n        }),\n      [ActionTypes.VIDEO_FETCH_SUCCESS]: (state, { payload }) =>\n        immutable(state, {\n          data: { $set: [...state.data, ...payload.data] },\n          page: { $set: payload.page }\n        }),\n      [ActionTypes.VIDEO_FETCH_FAILURE]: (state, { payload }) =>\n        immutable(state, {\n          status: { $set: AppStatus.READY }\n        })\n    },\n    videoState\n  )\n};\n","import app from \"./app\";\nimport user from \"./user\";\nimport video from \"./video\";\n\nexport default {\n  ...user,\n  ...video,\n  ...app\n};\n","import keyMirror from \"keymirror\";\n\nexport const ActionTypes = keyMirror({\n  VIDEO_FETCH: undefined,\n  VIDEO_FETCH_SUCCESS: undefined,\n  VIDEO_FETCH_FAILURE: undefined,\n  VIDEO_SHARING: undefined,\n  VIDEO_SHARING_SUCCESS: undefined,\n  VIDEO_SHARING_FAILURE: undefined\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ReactPlayer from \"react-player\";\n\nfunction VideoPlayer(props) {\n  const { url } = props;\n  return <ReactPlayer url={url} width=\"100%\" height=\"100%\" />;\n}\n\nVideoPlayer.propTypes = {\n  url: PropTypes.string.isRequired\n};\n\nexport default VideoPlayer;\n","import React, { PureComponent } from \"react\";\n\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport PropTypes from \"prop-types\";\nimport VideoPlayer from \"components/basic/VideoPlayer\";\n\nclass HomeScreen extends PureComponent {\n  static propTypes = {\n    fetch: PropTypes.func.isRequired,\n    videos: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleLoadMore = this.handleLoadMore.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetch } = this.props;\n    const param = { page_index: 0 };\n    fetch(param);\n  }\n\n  handleLoadMore(page) {\n    const { fetch } = this.props;\n    const param = { page_index: page };\n    fetch(param);\n  }\n  render() {\n    const { videos } = this.props;\n    const { data, page } = videos;\n    return data.length <= 0 ? (\n      <div className=\"card mb-2\">\n        <div className=\"row no-gutters text-center\">\n          <div className=\"card-body\">\n            <h2>No data available</h2>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={this.handleLoadMore}\n        hasMore={page.has_next}\n        loader={\n          <div className=\"loader text-center\" key={0}>\n            Loading ...\n          </div>\n        }\n      >\n        {data.map(video => {\n          const { id, url, title, description, user } = video;\n          const { email } = user;\n\n          return (\n            <div className=\"card mb-2\" key={id}>\n              <div className=\"row no-gutters\" style={{ \"min-height\": \"15rem\" }}>\n                <div className=\"col-md-5\">\n                  <VideoPlayer url={url} />\n                </div>\n                <div className=\"col-md-7\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{title}</h5>\n                    <p className=\"card-text\">\n                      <small className=\"text-muted\">Shared by: {email}</small>\n                    </p>\n                    <p className=\"card-text\">{description}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </InfiniteScroll>\n    );\n  }\n}\n\nexport default HomeScreen;\n","import HomeScreen from \"components/screens/Home\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { fetch } from \"actions\";\n\n/* istanbul ignore next */\nfunction mapStateToProps(state) {\n  return {\n    videos: state.videos\n  };\n}\n/* istanbul ignore next */\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetch: bindActionCreators(fetch, dispatch)\n  };\n}\n/* istanbul ignore next */\nconst ConnectedHomeScreen = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomeScreen);\n\nexport default ConnectedHomeScreen;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction Alert(props) {\n  const { message, type, onClick } = props;\n  return (\n    <div className={`alert alert-${type}`} role=\"alert\">\n      {message}\n      <button\n        type=\"button\"\n        className=\"close\"\n        data-dismiss=\"alert\"\n        aria-label=\"Close\"\n        onClick={onClick}\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  );\n}\nAlert.defaultProps = {\n  type: \"info\",\n  show: false\n};\nAlert.propTypes = {\n  message: PropTypes.string,\n  type: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default Alert;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport classnames from \"classnames\";\n\nfunction LoginForm(props) {\n  const { errors, email, password, onChange, onSubmit } = props;\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"form-row align-items-center\">\n        <div className=\"col-auto\">\n          <input\n            type=\"email\"\n            className={classnames(\"form-control form-control-sm\", {\n              \"is-invalid\": errors.email\n            })}\n            placeholder=\"Email Address\"\n            name=\"email\"\n            required\n            value={email}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"col-auto\">\n          <input\n            type=\"password\"\n            className={classnames(\"form-control form-control-sm\", {\n              \"is-invalid\": errors.password\n            })}\n            placeholder=\"Password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"col-auto\">\n          <button type=\"submit\" className=\"btn btn-success\">\n            Login / Register\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\nLoginForm.defaultProps = {\n  errors: {},\n  email: \"\",\n  password: \"\"\n};\n\nLoginForm.propTypes = {\n  errors: PropTypes.object,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func\n};\n\nexport default LoginForm;\n","import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nfunction LogoutForm(props) {\n  const { user, onLogout } = props;\n  const { info } = user;\n  const { email } = info;\n  return (\n    <div className=\"form-row align-items-center\">\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item mr-2\">\n            <Link className=\"nav-link text-white\" to=\"/\">\n              Wellcome <b>{email}</b>\n            </Link>\n          </li>\n          <li className=\"nav-item mr-2\">\n            <Link className=\"btn btn-success\" to=\"/video-sharing\">\n              Share a movie\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <button type=\"button\" className=\"btn btn-danger\" onClick={onLogout}>\n              Logout\n            </button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\nLogoutForm.defaultProps = {\n  user: {}\n};\n\nLogoutForm.propTypes = {\n  user: PropTypes.object,\n  onLogout: PropTypes.func\n};\n\nexport default LogoutForm;\n","import React, { PureComponent } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport LoginForm from \"components/basic/Form/Login\";\nimport LogoutForm from \"components/basic/Form/Logout\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nclass Header extends PureComponent {\n  static propTypes = {\n    create: PropTypes.func.isRequired,\n    logout: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleToggle(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      toggle: !prevState.toggle\n    }));\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleLogout(e) {\n    e.preventDefault();\n    const { logout } = this.props;\n    logout();\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { create } = this.props;\n    const { email, password } = this.state;\n\n    create({ email: email, password: password });\n  }\n\n  render() {\n    const { toggle, email, password } = this.state;\n    const { user } = this.props;\n    const { isAuthenticated } = user;\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Funny Movies\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n            onClick={this.handleToggle}\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n\n          <div\n            className={classnames(\"collapse navbar-collapse\", {\n              show: toggle\n            })}\n            id=\"mobile-nav\"\n          >\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                {!isAuthenticated ? (\n                  <LoginForm\n                    email={email}\n                    password={password}\n                    onSubmit={this.handleSubmit}\n                    onChange={this.handleChange}\n                  />\n                ) : (\n                  <LogoutForm user={user} onLogout={this.handleLogout} />\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Header;\n","import { Redirect, Route } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst RoutePrivate = ({\n  component: Component,\n  isAuthenticated,\n  to,\n  path,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          key={path}\n          to={{\n            pathname: to\n          }}\n        />\n      )\n    }\n  />\n);\n\nRoutePrivate.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  location: PropTypes.object,\n  to: PropTypes.string\n};\n\nRoutePrivate.defaultProps = {\n  to: \"/\"\n};\n\nexport default RoutePrivate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppConfig } from 'configurations';\n\nexport const RoutePublic = ({ component: Component, isAuthenticated, to, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (isAuthenticated ? <Redirect to={to} /> : <Component {...props} />)}\n  />\n);\n\nRoutePublic.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  to: PropTypes.string,\n};\n\nRoutePublic.defaultProps = {\n  to: AppConfig.routePrefix,\n};\n\nexport default RoutePublic;\n","import React, { Suspense } from \"react\";\n\nimport { AppConfig } from \"configurations\";\nimport PropTypes from \"prop-types\";\nimport { Route } from \"react-router-dom\";\nimport RoutePrivate from \"./RoutePrivate\";\nimport RoutePublic from \"./RoutePublic\";\nimport { Switch } from \"react-router\";\n\nconst LoadingMessage = () => \"I'm loading...\";\n\nfunction Router(props) {\n  const { isAuthenticated, notFoundComponent, homeComponent, routes } = props;\n  return (\n    <Suspense fallback={<LoadingMessage />}>\n      <Switch>\n        {routes.map(route => {\n          const { path, exact, component, ...rest } = route;\n          return (\n            <RoutePrivate\n              key={`${AppConfig.routePrefix}${path}`}\n              path={`${AppConfig.routePrefix}${path}`}\n              to={`${AppConfig.routePrefix}/404`}\n              isAuthenticated={isAuthenticated}\n              component={component}\n              {...rest}\n            />\n          );\n        })}\n        <Route path=\"/\" exact component={homeComponent}></Route>\n        <RoutePublic\n          isAuthenticated={isAuthenticated}\n          component={notFoundComponent}\n        />\n      </Switch>\n    </Suspense>\n  );\n}\n\nRouter.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  routes: PropTypes.array.isRequired,\n  notFoundComponent: PropTypes.any.isRequired,\n  homeComponent: PropTypes.any.isRequired\n};\n\nexport default Router;\n","import Router from \"components/group/Router\";\n\nexport default Router;\n","import React, { PureComponent } from \"react\";\n\nimport Alert from \"components/basic/Alert\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"components/group/Header\";\nimport PropTypes from \"prop-types\";\nimport Router from \"containers/group/Router\";\nimport { AppRoutes as routes } from \"configurations\";\n\nclass MainScreen extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.handleAlertCloseClick = this.handleAlertCloseClick.bind(this);\n    const { clearMessage } = this.props;\n    clearMessage();\n  }\n\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n    app: PropTypes.object.isRequired,\n    clearMessage: PropTypes.func.isRequired,\n    create: PropTypes.func.isRequired,\n    logout: PropTypes.func.isRequired,\n    notFoundComponent: PropTypes.any.isRequired,\n    homeComponent: PropTypes.any.isRequired\n  };\n\n  handleAlertCloseClick(e) {\n    e.preventDefault();\n    const { clearMessage } = this.props;\n    clearMessage();\n  }\n\n  render() {\n    const {\n      app,\n      user,\n      notFoundComponent,\n      homeComponent,\n      create,\n      logout\n    } = this.props;\n    const { message } = app;\n    const { type, content } = message;\n\n    return (\n      <BrowserRouter>\n        <Header create={create} user={user} logout={logout} />\n\n        <div className=\"container\">\n          {type && content && (\n            <Alert\n              message={content}\n              type={type}\n              onClick={this.handleAlertCloseClick}\n            />\n          )}\n          <Router\n            routes={routes}\n            homeComponent={homeComponent}\n            notFoundComponent={notFoundComponent}\n            isAuthenticated={user.isAuthenticated}\n          />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default MainScreen;\n","import { clearMessage, create, logout } from \"actions\";\n\nimport MainScreen from \"components/screens/Main\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\n/* istanbul ignore next */\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n/* istanbul ignore next */\nfunction mapDispatchToProps(dispatch) {\n  return {\n    create: bindActionCreators(create, dispatch),\n    logout: bindActionCreators(logout, dispatch),\n    clearMessage: bindActionCreators(clearMessage, dispatch)\n  };\n}\n/* istanbul ignore next */\nconst ConnectedMainScreen = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainScreen);\n\nexport default ConnectedMainScreen;\n","import styled from 'styled-components';\n\nconst NotFoundWrapper = styled.div``;\n\nexport default NotFoundWrapper;\n","import NotFoundScreen from \"components/screens/NotFound\";\n\nexport default NotFoundScreen;\n","import React, { PureComponent } from \"react\";\n\nimport NotFoundWrapper from \"./components/NotFoundWrapper\";\n\nexport class NotFoundScreen extends PureComponent {\n  render() {\n    return (\n      <NotFoundWrapper className=\"404-error-page\">\n        <div className=\"error-content\">\n          <h1>404</h1>\n          <h3>Looks like you got lost</h3>\n          <p>The page youre looking for doesnt exist or has been moved</p>\n        </div>\n      </NotFoundWrapper>\n    );\n  }\n}\n\nexport default NotFoundScreen;\n","import { persistor, store } from \"./store\";\n\nimport ConnectedHomeScreen from \"containers/screens/Home\";\nimport ConnectedMainScreen from \"containers/screens/Main\";\nimport NotFoundScreen from \"containers/screens/NotFound\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <ConnectedMainScreen\n          notFoundComponent={NotFoundScreen}\n          homeComponent={ConnectedHomeScreen}\n        />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","import \"./style.scss\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ActionTypes } from \"./type\";\nimport { createActions } from \"redux-actions\";\n\nexport const {\n  userLogin: login,\n  userLogout: logout,\n  userCreate: create\n} = createActions({\n  [ActionTypes.USER_LOGIN]: param => ({ ...param }),\n  [ActionTypes.USER_CREATE]: param => ({ ...param }),\n  [ActionTypes.USER_LOGOUT]: () => ({})\n});\n","import { ActionTypes } from \"./type\";\nimport { createActions } from \"redux-actions\";\n\nexport const { videoFetch: fetch, videoSharing: shareVideo } = createActions({\n  [ActionTypes.VIDEO_FETCH]: param => ({ ...param }),\n  [ActionTypes.VIDEO_SHARING]: param => ({ ...param })\n});\n","import { ActionTypes } from \"./type\";\nimport { createActions } from \"redux-actions\";\n//import proxy from 'http-proxy-middleware';\n\nexport const { clearMessage } = createActions({\n  [ActionTypes.CLEAR_MESSAGE]: param => ({ ...param })\n});\n/*\nexport default function(app) {\n  app.use(proxy('/users/**', { target: 'https://obscure-beach-46869.herokuapp.com/' }));\n  app.use(proxy('/videos/**', { target: 'https://obscure-beach-46869.herokuapp.com/' }));\n  app.use(proxy('/token/**', { target: 'https://obscure-beach-46869.herokuapp.com/' }));\n};\n*/","import { create, login, logout } from \"./user\";\nimport { fetch, shareVideo } from \"./video\";\n\nimport { clearMessage } from \"./app\";\n\nexport { login, logout, create, fetch, shareVideo, clearMessage };\n","import keyMirror from \"keymirror\";\n\nexport const ActionTypes = keyMirror({\n  CLEAR_MESSAGE: undefined\n});\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport middleware, { sagaMiddleware } from \"./middleware\";\nimport { persistReducer, persistStore } from \"redux-persist\";\n\nimport rootReducer from \"reducers\";\nimport rootSaga from \"sagas\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst reducer = persistReducer(\n  {\n    key: \"rrsb\", // key is required\n    storage, // storage is now required\n    whitelist: [\"app\", \"user\"]\n  },\n  combineReducers({\n    ...rootReducer\n  })\n);\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n/* istanbul ignore next */\nconst configStore = (initialState = {}) => {\n  const store = createStore(\n    reducer,\n    initialState,\n    composeEnhancer(applyMiddleware(...middleware))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"reducers\", () => {\n      store.replaceReducer(require(\"reducers/index\").default);\n    });\n  }\n\n  return {\n    persistor: persistStore(store),\n    store\n  };\n};\n\nconst { store, persistor } = configStore();\n\nglobal.store = store;\n\nexport { store, persistor };\n","import createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\n/* istanbul ignore next */\nif (process.env.NODE_ENV === \"development\") {\n  const logger = createLogger({\n    collapsed: true,\n    diff: true,\n    duration: true\n  });\n\n  middleware.push(logger);\n}\nexport default middleware;\n","import { lazy } from \"react\";\n/* istanbul ignore next */\nconst AppRoutes = [\n  {\n    path: \"/video-sharing\",\n    exact: true,\n    component: lazy(\n      /* istanbul ignore next */ () => import(\"containers/screens/VideoSharing\")\n    )\n  }\n];\n\nexport default AppRoutes;\n","const AppConfig = {\n  routePrefix: \"\",\n  youtubeAPIKey: \"AIzaSyB7mOeBlVf2sixfEqOAopTNTIYEbcweGjM\",\n  youtubeAPIURL: \"https://www.googleapis.com/youtube/v3/videos\"\n};\n\nexport default AppConfig;\n// export const baseUrl = process.env.NODE_ENV === 'development' ? window.location.href : 'https://obscure-beach-46869.herokuapp.com/'","import AppRoutes from \"./AppRoutes\";\nimport AppConfig from \"./AppConfig\";\nimport AppStatus from \"./AppConfig\";\n\nexport { AppRoutes, AppConfig, AppStatus };\n"],"sourceRoot":""}