{"ast":null,"code":"var _jsxFileName = \"/Users/nhunam/Desktop/Java/remitano/remitano/video-sharing-react/src/components/group/Router/RoutePublic.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppConfig } from 'configurations';\nexport const RoutePublic = ({\n  component: Component,\n  isAuthenticated,\n  to,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated ? /*#__PURE__*/React.createElement(Redirect, {\n    to: to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 64\n    }\n  })),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}));\nRoutePublic.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  to: PropTypes.string\n};\nRoutePublic.defaultProps = {\n  to: AppConfig.routePrefix\n};\nexport default RoutePublic;","map":{"version":3,"sources":["/Users/nhunam/Desktop/Java/remitano/remitano/video-sharing-react/src/components/group/Router/RoutePublic.jsx"],"names":["React","PropTypes","Route","Redirect","AppConfig","RoutePublic","component","Component","isAuthenticated","to","rest","props","propTypes","oneOfType","func","object","isRequired","bool","string","defaultProps","routePrefix"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,eAAxB;AAAyCC,EAAAA,EAAzC;AAA6C,KAAGC;AAAhD,CAAD,kBACzB,oBAAC,KAAD,oBACMA,IADN;AAEE,EAAA,MAAM,EAAEC,KAAK,IAAKH,eAAe,gBAAG,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA0B,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAF7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAOPN,WAAW,CAACO,SAAZ,GAAwB;AACtBN,EAAAA,SAAS,EAAEL,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,IAAX,EAAiBb,SAAS,CAACc,MAA3B,CAApB,EAAwDC,UAD7C;AAEtBR,EAAAA,eAAe,EAAEP,SAAS,CAACgB,IAAV,CAAeD,UAFV;AAGtBP,EAAAA,EAAE,EAAER,SAAS,CAACiB;AAHQ,CAAxB;AAMAb,WAAW,CAACc,YAAZ,GAA2B;AACzBV,EAAAA,EAAE,EAAEL,SAAS,CAACgB;AADW,CAA3B;AAIA,eAAef,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AppConfig } from 'configurations';\n\nexport const RoutePublic = ({ component: Component, isAuthenticated, to, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (isAuthenticated ? <Redirect to={to} /> : <Component {...props} />)}\n  />\n);\n\nRoutePublic.propTypes = {\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  to: PropTypes.string,\n};\n\nRoutePublic.defaultProps = {\n  to: AppConfig.routePrefix,\n};\n\nexport default RoutePublic;\n"]},"metadata":{},"sourceType":"module"}